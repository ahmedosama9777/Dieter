<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        46vJzsfmUKdKVa6nbglr5rN3fyMpyRMfp534j5t/w5idp42jeflDyrMM2rV6jqb8lrdWbV/Uv4tLStf1
        czPeVHJqbWn9PER2hftjtqFJKjWdrJJSf6X3/a+vIq3rOGdreHyn09pb42z16q+KO8evvC6NmTS42f5L
        HERurKolo+Cn2ffuYTExbrp3+vtLdS8bdF+a/T3hUcFi50J7k7qztr9mXsGeMse/nCrmwzjn28pXrKMz
        UktTe0u7TncDMAAAAAPkpAQcZjlFcQKvm20CV9QKhmGeym92O9JvhGOr+Rvxae+TntHq13yVr3YUMlrV
        PNVl4UfcTvN+r5F7Hgx4/eVDLrPKr0bZfKadPCOEIqPi7zb5t3srv4FDW75LTWVzRWmKReXExKs2nxWj
        9Tz8xs70ONjaV3vLRr6kROzJro4zlLQ2RKJqkqr3JYjqAa6lYhOzp7NYJVZupLWNOztycnwX5+RVyTM2
        nfyZZcnw8cdPefot7Zg5zk5xmfh+SPttcfdXX1Nd77Lul03xP1W7K2rt3et+L6s0OtxEJVKmnFwkrwmr
        SXP1Xc2Ut0q+TnnzVHOcgdB70PNB6q13ddV+VyO3pdZ1/pv38p9fu5OfTREddO3nHp9nPpuzUouzRetW
        LR0z2VK2ms9Ud182S2nUkqNV2tpGT/S+j/b35HNvScM7T4fKfT2lfiYzx1V8XnHr7wt0iWqHKzzJ44iN
        9I1EvLLgpftl+GYTE79VeJ+vtLbW0bdNua/T3hVsBiJ0KnhzurO2v2OhhzRlj3jvCpmwzjn1ie0r9lON
        3kjc0uumB9AAAPjYHNzHGqKeoFDz/PrX1MqUm07QiZiOZcfA5VWxL35t0qb4N/7k12XJdzoY8FMfNuZ/
        wo5tXtxVY8DldOirU4JdZPWT9WbZtMufa827t04DdgsOzuIvT3OcG/8Aq9SnqK/q39XU0V96dPog7Q4S
        z8RcJe12l1+JxtXh6Z64dvS5d46ZVnEFFccvEIb7Mkb/AFLiZRc6UjAzlWl4dNOUrN2vbRcXr6mzHE5L
        dNe7DJNccdVuyFja8tYey02n1uj0Wh/CopMZMvM+UeX7+rzP4h+MTeJx4Y2jznz/AG9F92JqLwJJe9F/
        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
</value>
  </data>
</root>